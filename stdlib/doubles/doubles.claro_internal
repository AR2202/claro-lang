provider static_MAX_VALUE() -> double {
  var res: double;
  $$BEGIN_JAVA
    res = java.lang.Double.MAX_VALUE;
  $$END_JAVA
  return res;
}
provider static_MIN_VALUE() -> double {
  var res: double;
  $$BEGIN_JAVA
    res = java.lang.Double.MIN_VALUE;
  $$END_JAVA
  return res;
}


function parseDouble(s: string) -> oneof<double, std::Error<InvalidNumberFormat>> {
  var res: oneof<double, std::Error<InvalidNumberFormat>>;

  var errCons = (msg: string) -> std::Error<InvalidNumberFormat> { return std::Error(InvalidNumberFormat({msg = msg})); };

  $$BEGIN_JAVA
    try {
      res = java.lang.Double.parseDouble(s);
    } catch (java.lang.NumberFormatException e) {
      res = errCons.apply(e.getMessage());
    }
  $$END_JAVA
  return res;
}
