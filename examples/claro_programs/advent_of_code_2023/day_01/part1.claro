
files::readOrPanic(resources::Input)
  |> strings::split(^, "\n")
  |> [[ints::parseInt(x) | x in strings::splitChars(line) where ints::parseInt(x) instanceof int] | line in ^]
  |> fp::map(
       ^,
       (nums: [oneof<int, std::Error<ints::InvalidNumberFormat>>]) -> int {
         match ((nums[0], nums[len(nums) - 1])) {
           case (A:int, B:int) -> return 10 * A + B;
           case _              -> return 0; # Impossible case.
         }
       }
     )
   |> fp::reduce(^, (accum: int, i: int) -> int { return accum + i; }, 0)
   |> print(^);

